name: Deploy Flask App to AWS Lambda

on:
  push:
    branches:
      - deployment_test  # Trigger on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create directory structure
        run: |
          mkdir -p package/dependencies  # Create a separate folder for dependencies

      - name: Install dependencies in the 'package/dependencies' directory
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -t package/dependencies  # Install dependencies in dependencies folder

      - name: Copy application files to the root of the package
        run: |
          cp -r $(ls | grep -v 'package' | grep -v '.git') package/  # Copy application files to package root

      - name: Create lambda_function.py with path setup
        run: |
          cat > package/lambda_function.py << 'EOL'
          import sys
          import os
          
          # Only modify path in Lambda environment
          if os.environ.get('AWS_EXECUTION_ENV') is not None:
              sys.path.append(os.path.join(os.path.dirname(__file__), "dependencies"))
          
          from app import app
          from mangum import Mangum
          
          handler = Mangum(app)
          EOL

      - name: Install zip command
        uses: montudor/action-zip@v1

      - name: Create zip file for Lambda function
        run: |
          cd package
          zip -r ../code.zip .

      - name: AWS CLI v2
        uses: imehedi/actions-awscli-v2@latest
        with:
          args: "lambda update-function-code \
            --function-name arn:aws:lambda:us-east-1:189474657107:function:flask_lambda \
            --zip-file fileb://code.zip"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_DEFAULT_REGION: "us-east-1"