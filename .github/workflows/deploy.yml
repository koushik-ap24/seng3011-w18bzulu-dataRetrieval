name: Deploy Flask App to AWS Lambda

on:
  push:
    branches:
      - deployment_test  # Trigger on push to the deployment_test branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Create directory structure
        run: mkdir -p package

      - name: Copy application files to the package root
        run: cp -r $(ls | grep -v 'package' | grep -v '.git') package/

      - name: Install zip command
        uses: montudor/action-zip@v1

      - name: Create zip file for Lambda function
        run: |
          cd package
          zip -r ../code.zip .

      - name: Upload Lambda Function Code
        run: |
          aws lambda update-function-code \
            --function-name flask_lambda \
            --zip-file fileb://code.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_DEFAULT_REGION: "us-east-1"

      - name: Create Lambda Layer for Dependencies
        run: |
          mkdir -p python/lib/python3.12/site-packages  # Match Lambda runtime
          pip install -r requirements.txt -t python/lib/python3.12/site-packages
          cd python
          zip -r ../lambda-layer.zip .
          cd ..
      
      - name: Deploy Lambda Layer
        run: |
          LAYER_VERSION=$(aws lambda publish-layer-version \
            --layer-name my-dependencies-layer \
            --description "Dependencies for Flask API" \
            --zip-file fileb://lambda-layer.zip \
            --compatible-runtimes python3.12 \
            --output text --query 'LayerVersionArn')

          # Get existing layers
          CURRENT_LAYERS=$(aws lambda get-function-configuration \
            --function-name flask_lambda \
            --query 'Layers[*].Arn' --output text)

          # Append the new layer
          NEW_LAYERS="$LAYER_VERSION $CURRENT_LAYERS"

          aws lambda update-function-configuration \
            --function-name flask_lambda \
            --layers $NEW_LAYERS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_DEFAULT_REGION: "us-east-1"
