# This workflow will lint, run tests, and type check with Python 3.11

name: Build and test app

on:
  pull_request:
    branches: [ "main" ]

jobs:
  dev:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      checks: write
      pull-requests: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff pytest-cov mypy
        pip install -r requirements.txt

    - name: Lint with Ruff
      run: ruff check --output-format=github

    - name: Check code formatting with Ruff
      run: ruff format --diff
      continue-on-error: true
    
    - name: Create .env file
      run: |
        echo "HOST=${{ secrets.HOST }}" > .env
        echo "PORT=${{ secrets.PORT }}" >> .env
        echo "DB=${{ secrets.DB }}" >> .env
        echo "PASSWORD=${{ secrets.PASSWORD }}" >> .env
        echo "DB_USER=${{ secrets.DB_USER }}" >> .env
    

    - name: Run tests and generate coverage report
      run: |
        echo -e "[run]\nomit = tests/*" > .coveragerc   # Exclude test files from code coverage report
        pytest --junitxml=pytest.xml --cov-report term-missing --cov-report xml:coverage.xml --cov=./ tests/

    - name: Comment on coverage report
      uses: MishaKav/pytest-coverage-comment@main
      with:
        pytest-xml-coverage-path: ./coverage.xml
        junitxml-path: ./pytest.xml

    - name: Run type checking with mypy
      run: mypy ./ --check-untyped-defs --disable-error-code=import-untyped
      continue-on-error: true

  staging:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest

      - name: Install Newman dependency
      - run: |
          npm install newman

      - name: Run Postman tests with Newman
      - run: |
          newman run postman/ZULU_retrieval.postman_collection.json -r cli,junit \
            --reporter-junit-export postman
